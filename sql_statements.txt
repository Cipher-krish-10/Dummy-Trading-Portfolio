-- Drop tables if they already exist to avoid errors during development
DROP TABLE IF EXISTS USER_ADMIN, STOCK_PORTFOLIO, STOCK_WATCHLIST, WATCHLIST, TRANSACTION, BROKERAGE, BROKER, DIVIDEND, PORTFOLIO, STOCK, USER, ADMIN;

-- ADMIN table
CREATE TABLE ADMIN (
    admin_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    email VARCHAR(100),
    ticker_symbol VARCHAR(10)
) ENGINE=InnoDB;

-- USER table
CREATE TABLE USER (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100),
    password_hash VARCHAR(255) NOT NULL,
    phone_number VARCHAR(15),
    created_at DATETIME
) ENGINE=InnoDB;

-- STOCK table
CREATE TABLE STOCK (
    stock_id INT AUTO_INCREMENT PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    ticker_symbol VARCHAR(10) UNIQUE,
    current_price DECIMAL(10,2),
    market_sector VARCHAR(50)
) ENGINE=InnoDB;

-- PORTFOLIO table
CREATE TABLE PORTFOLIO (
    portfolio_id INT AUTO_INCREMENT PRIMARY KEY,
    portfolio_name VARCHAR(100),
    total_balance DECIMAL(15,2),
    created_at DATETIME,
    average_buy_price DECIMAL(10,2),
    quantity_held INT,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES USER(user_id)
) ENGINE=InnoDB;

-- DIVIDEND table
CREATE TABLE DIVIDEND (
    dividend_id INT AUTO_INCREMENT PRIMARY KEY,
    payment_date DATE,
    dividend_per_share DECIMAL(10,2),
    total_dividend_received DECIMAL(15,2),
    stock_id INT,
    portfolio_id INT,
    FOREIGN KEY (stock_id) REFERENCES STOCK(stock_id),
    FOREIGN KEY (portfolio_id) REFERENCES PORTFOLIO(portfolio_id)
) ENGINE=InnoDB;

-- BROKER table
CREATE TABLE BROKER (
    broker_id INT AUTO_INCREMENT PRIMARY KEY,
    broker_name VARCHAR(100) NOT NULL
) ENGINE=InnoDB;

-- BROKERAGE (weak entity)
CREATE TABLE BROKERAGE (
    broker_id INT PRIMARY KEY,
    brokerage_percentage DECIMAL(5,2),
    FOREIGN KEY (broker_id) REFERENCES BROKER(broker_id)
) ENGINE=InnoDB;

-- TRANSACTION table
CREATE TABLE TRANSACTION (
    transaction_id INT AUTO_INCREMENT PRIMARY KEY,
    transaction_type VARCHAR(10),
    transaction_date DATE,
    quantity INT,
    price_per_share DECIMAL(10,2),
    total_amount DECIMAL(15,2),
    brokerage_fee DECIMAL(10,2),
    portfolio_id INT,
    stock_id INT,
    broker_id INT,
    FOREIGN KEY (portfolio_id) REFERENCES PORTFOLIO(portfolio_id),
    FOREIGN KEY (stock_id) REFERENCES STOCK(stock_id),
    FOREIGN KEY (broker_id) REFERENCES BROKER(broker_id)
) ENGINE=InnoDB;

-- WATCHLIST table
CREATE TABLE WATCHLIST (
    watchlist_id INT AUTO_INCREMENT PRIMARY KEY,
    added_date DATE,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES USER(user_id)
) ENGINE=InnoDB;

-- STOCK_WATCHLIST (many-to-many)
CREATE TABLE STOCK_WATCHLIST (
    stock_id INT,
    watchlist_id INT,
    PRIMARY KEY (stock_id, watchlist_id),
    FOREIGN KEY (stock_id) REFERENCES STOCK(stock_id),
    FOREIGN KEY (watchlist_id) REFERENCES WATCHLIST(watchlist_id)
) ENGINE=InnoDB;

-- STOCK_PORTFOLIO (many-to-many)
CREATE TABLE STOCK_PORTFOLIO (
    stock_id INT,
    portfolio_id INT,
    quantity_held INT,
    PRIMARY KEY (stock_id, portfolio_id),
    FOREIGN KEY (stock_id) REFERENCES STOCK(stock_id),
    FOREIGN KEY (portfolio_id) REFERENCES PORTFOLIO(portfolio_id)
) ENGINE=InnoDB;

-- USER_ADMIN (many-to-many partial participation)
CREATE TABLE USER_ADMIN (
    user_id INT,
    admin_id INT,
    PRIMARY KEY (user_id, admin_id),
    FOREIGN KEY (user_id) REFERENCES USER(user_id),
    FOREIGN KEY (admin_id) REFERENCES ADMIN(admin_id)
) ENGINE=InnoDB;